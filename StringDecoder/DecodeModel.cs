// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var decodeModel = DecodeModel.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using System.Text.Json.Serialization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class DecodeModel
    {
        [JsonProperty("splitBy")]
        public string SplitBy { get; set; }

        [JsonProperty("input")]
        public List<string> Input { get; set; }

        [JsonProperty("output")]
        public List<string> Output { get; set; }

        [JsonProperty("result")]
        public List<string> Result { get; set; }
    }

    public partial class DecodeModel
    {
        public static DecodeModel FromJson(string json) => JsonConvert.DeserializeObject<DecodeModel>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this DecodeModel self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
